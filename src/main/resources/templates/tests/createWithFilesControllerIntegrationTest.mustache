package {{package}};

{{#imports}}
import {{.}};
{{/imports}}

import org.junit.jupiter.api.Test;
import org.springframework.http.*;
import org.springframework.util.LinkedMultiValueMap;
import org.springframework.util.MultiValueMap;
import static org.assertj.core.api.Assertions.assertThat;
import org.axonframework.commandhandling.gateway.CommandGateway;
import org.springframework.beans.factory.annotation.Autowired;

public class {{name}}CreateControllerIntegrationTest extends BaseIntegrationTests {

@Autowired
private CommandGateway commandGateway;

@Test
void it_should_be_able_to_add_{{nameLower}}() {

	{{name}}Request requestDTO = new {{name}}Request();

	{{#fields}}
		{{^isId}}
	requestDTO.set{{nameCapitalized}}({{{testValue}}});
		{{/isId}}
	{{/fields}}

MultiValueMap<String, Object> body = new LinkedMultiValueMap<>();
{{#fields}}
	{{^isId}}
		body.add("{{nameCamelCase}}", requestDTO.get{{nameCapitalized}}().toString());
	{{/isId}}
{{/fields}}
{{#fieldFiles}}
	body.add("{{nameCamelCase}}", createFile());
{{/fieldFiles}}

headers.setContentType(MediaType.MULTIPART_FORM_DATA);

HttpEntity<MultiValueMap<String, Object>> requestEntity = new HttpEntity<>(body, headers);

String uri = "/v1/commands/{{entityUnCapitalized}}";
ResponseEntity<{{name}}Response> response =
	this.postForEntity(uri, requestEntity, {{name}}Response.class);
	assertThat(response.getStatusCode()).isEqualTo(HttpStatus.OK);
	assertThat(response.getBody()).isNotNull();
	assertThat(response.getBody().getId()).isNotNull();

	{{#fields}}
		{{^isId}}
	assertThat(response.getBody().get{{nameCapitalized}}().toString())
	.isEqualTo(requestDTO.get{{nameCapitalized}}().toString());
		{{/isId}}
	{{/fields}}
	}
	}
