package {{package}};

{{#imports}}
import {{.}};
{{/imports}}

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.*;
import org.axonframework.commandhandling.gateway.CommandGateway;
import static org.assertj.core.api.Assertions.assertThat;

public class {{name}}UpdateControllerIntegrationTest extends BaseIntegrationTests {

@Autowired
private {{name}}Repository {{nameLower}}Repository;

@Autowired
private CommandGateway commandGateway;

@Autowired
private CommandGateway commandGatewayUpdate;


@Test
void it_should_be_able_to_update_{{nameLower}}() {

	String existingId = {{name}}Fixtures.randomOneViaCommand(commandGateway, getUserId()).getId().value();
	Create{{name}}Command updated = {{name}}Fixtures.randomOneViaCommand(commandGatewayUpdate, getUserId());

	{{name}}Fixtures.byIdWaitExist({{nameLower}}Repository, existingId);
	{{name}}Fixtures.byIdWaitExist({{nameLower}}Repository, updated.getId().value());

	{{name}}Request requestDTO = new {{name}}Request();
	{{#editableFields}}
		{{^isId}}
		{{#relation}}
	 requestDTO.set{{nameCapitalized}}( updated.get{{nameCapitalized}}().value());
		{{/relation}}
		{{^relation}}
	 requestDTO.set{{nameCapitalized}}({{{testDomainValue}}});
		{{/relation}}
		{{/isId}}
	{{/editableFields}}

	String uri = "/v1/commands/{{entityUnCapitalized}}/" + existingId;
	ResponseEntity<String> response = this.put(uri,requestDTO);

	assertThat(response.getStatusCode()).isEqualTo(HttpStatus.OK);

	}
}
