package {{package}};

{{#imports}}
import {{.}};
{{/imports}}
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.stereotype.Repository;

import java.util.List;
import java.util.Optional;

@Repository
public interface {{entityName}}Repository extends JpaRepository<{{entityName}}, String> {

	@Query("SELECT t FROM {{entityName}} t ")
	Page<{{entityName}}> findAll(Pageable pageable);

	@Query("SELECT t FROM {{entityName}} t WHERE t.id = :id")
	Optional<{{entityName}}> findById({{entityName}}{{identifier.nameCapitalized}} id);
{{#fields}}
	{{^isId}}
	{{^isUnique}}
	@Query("SELECT t FROM {{entityName}} t WHERE t.{{nameLowerCase}} = :{{nameLowerCase}}")
	List<{{entityName}}> findBy{{nameCapitalized}}({{primitiveType}} {{nameLowerCase}});
	{{/isUnique}}
	{{#isUnique}}
	@Query("SELECT t FROM {{entityName}} t WHERE t.{{nameLowerCase}} = :{{nameLowerCase}}")
	Optional<{{entityName}}> findBy{{nameCapitalized}}({{primitiveType}} {{nameLowerCase}});
	{{/isUnique}}
	{{/isId}}
{{/fields}}

{{#compositeKeys}}
	Optional<{{entityName}}> findBy{{left.nameCapitalized}}And{{right.nameCapitalized}}({{left.type}} {{left.name}}, {{right.type}} {{right.name}});
{{/compositeKeys}}
}
