package {{package}};

{{#imports}}
import {{.}};
{{/imports}}

import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.Builder;

import java.util.*;

@Getter
@Setter
@AllArgsConstructor
@NoArgsConstructor
@Builder
@Entity
@Table(name = "{{tableName}}")
public class {{entity}} {

	@Id
	private String id;

{{#fields}}
{{^isId}}
{{#relation}}
{{#isOneToMany}}
	@OneToMany(mappedBy = "{{entityLowerCase}}",fetch = FetchType.EAGER, cascade = CascadeType.ALL)
	private {{{realType}}} {{nameLowerCase}} = new HashSet<>();
{{/isOneToMany}}
{{#isManyToOne}}
	@ManyToOne
	@JoinColumn(name = "{{nameLowerCase}}_id", nullable = {{nullable}})
	private {{realType}} {{nameLowerCase}};
{{/isManyToOne}}
{{/relation}}
{{^relation}}
	@Column(nullable = {{nullable}}, unique = {{unique}})
	private {{primitiveType}} {{nameLowerCase}};
{{/relation}}
{{/isId}}
{{/fields}}
	public {{entity}}(String id) {
	this.id = id;
}

	@Override
 public String toString() {
	return "{{entity}}{" +
	"id='" + id + '\'' +
	{{#fields}}
	{{^isId}}
		", {{nameLowerCase}}=" + {{nameLowerCase}} +
	{{/isId}}
	{{/fields}}
	'}';
	}
}
