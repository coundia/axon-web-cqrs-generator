import SwiftUI

struct {{entity}}MenuView: View {
    @Binding var showingTrash: Bool
    @Binding var isSyncing: Bool
    @Binding var showForm: Bool
     let pushAction: () async -> Void
    let pullAction: () async -> Void
    let syncAction: () async -> Void

     @Binding var showSearch: Bool

    @AppStorage("autoSave{{entity}}") private var autoSave: Bool = true

    var body: some View {
        Menu {

        Button {
                showSearch = true
            } label: {
                Label(t("Rechercher"), systemImage: "magnifyingglass")
            }

            Button {
                withAnimation { showingTrash.toggle() }
            } label: {
                Label(showingTrash ? t("Liste") : t("Corbeille"), systemImage: "tray")
            }

            if !showingTrash {

             Button {
                    Task {
                        isSyncing = true
                        await pushAction()
                        isSyncing = false
                    }
                } label: {
                    Label(t("Envoyer (Push)"), systemImage: "arrow.up.circle.fill")
                }

                Button {
                    Task {
                        isSyncing = true
                        await pullAction()
                        isSyncing = false
                    }
                } label: {
                    Label(t("Récupérer (Pull)"), systemImage: "arrow.down.circle.fill")
                }

                Button {
                    Task {
                        isSyncing = true
                        await syncAction()
                        isSyncing = false
                    }
                } label: {
                    Label(t("Synchroniser"), systemImage: "arrow.triangle.2.circlepath")
                }

                Button { showForm = true } label: {
                    Label(t("Ajouter {{entity}}"), systemImage: "plus")
                }
            }

            Toggle(isOn: $autoSave) {
                Label(t("Sauvegarde auto"), systemImage: autoSave ? "checkmark.circle" : "circle")
            }


        } label: {
            Image(systemName: "ellipsis.circle")
                .font(.title2)
        }
    }
}
