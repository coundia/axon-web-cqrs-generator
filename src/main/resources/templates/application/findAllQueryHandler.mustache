package {{package}};

{{#imports}}
import {{.}};
{{/imports}}

import org.axonframework.queryhandling.QueryHandler;
import org.springframework.stereotype.Component;
import java.util.List;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;

@Component
public class FindAll{{nameAggregate}}QueryHandler {

private final {{nameAggregate}}Repository repository;

public FindAll{{nameAggregate}}QueryHandler({{nameAggregate}}Repository repository) {
	this.repository = repository;
}

@QueryHandler
public {{nameAggregate}}PagedResponse handle(FindAll{{nameAggregate}}Query query) {
int limit = query.getLimit();
int offset = query.getPage() * limit;

long totalElements = repository.count();

PageRequest pageable = PageRequest.of(offset / limit, limit);

Page<{{entity}}> pages = repository.findAll(pageable);

List<{{nameAggregate}}Response> responses = pages.stream()
	.map({{nameAggregate}}Mapper::toResponse)
	.toList();

	return {{nameAggregate}}PagedResponse.from(
	pages,
	responses
	);
	}
}
