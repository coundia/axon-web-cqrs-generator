package {{package}};

{{#imports}}
import {{.}};
{{/imports}}

import org.axonframework.commandhandling.gateway.CommandGateway;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;
import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class {{name}}ApplicationService {

private final FileStorageService fileStorageService;
private final CommandGateway commandGateway;

public String create{{name}}(
{{#fieldFiles}}
	MultipartFile {{nameCamelCase}}{{^last}},{{/last}}
{{/fieldFiles}},
{{#fields}}
	{{^isId}}
		{{primitiveType}} {{nameCamelCase}}{{^last}},{{/last}}
	{{/isId}}
{{/fields}}
) {
{{#fieldFiles}}
	{{entity}}{{nameCapitalized}} {{nameCamelCase}}Reference = {{entity}}{{nameCapitalized}}.create(fileStorageService.storeFile({{nameCamelCase}}));
{{/fieldFiles}}

{{name}}Request request = new {{name}}Request(
{{#fields}}
	{{^isId}}{{nameCamelCase}}{{^last}},{{/last}}{{/isId}}
{{/fields}}
);

Create{{name}}Command command = {{name}}Mapper.toCommand(
request,
{{#fieldFiles}}{{nameCamelCase}}Reference{{^last}}, {{/last}}{{/fieldFiles}}
);

return commandGateway.sendAndWait(command).toString();
}
}
