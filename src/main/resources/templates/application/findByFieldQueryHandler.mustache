package {{package}};

{{#imports}}
import {{.}};
{{/imports}}
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Component;
import java.util.List;
import org.axonframework.queryhandling.QueryHandler;

@Component
@RequiredArgsConstructor
public class FindBy{{name}}{{field.nameCapitalized}}Handler {

private final {{name}}Repository repository;
@QueryHandler
{{^isUnique}}
public List<{{name}}Response> handle(FindBy{{name}}{{field.nameCapitalized}}Query query) {
{{field.primitiveType}} value = query.get{{field.nameCapitalized}}().value();
	List<{{entity}}> entities = repository.findBy{{field.nameCapitalized}}(value);
	return entities.stream()
	.map({{name}}Mapper::toResponse)
	.toList();
	}
{{/isUnique}}

{{#isUnique}}
 public {{name}}Response handle(FindBy{{name}}{{field.nameCapitalized}}Query query) {
	{{field.primitiveType}} value = query.get{{field.nameCapitalized}}().value();
	{{entity}} entity = repository.findBy{{field.nameCapitalized}}(value)
		.orElse(null);

		if (entity == null) {
			return null;
		}

		return {{name}}Mapper.toResponse(entity);
	}
{{/isUnique}}

}
